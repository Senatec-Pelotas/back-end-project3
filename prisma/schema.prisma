// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id              Int      @id @default(autoincrement())
  nome            String
  email           String   @unique
  dataAniversario DateTime
  compras         Compra[]
  Venda           Venda[]
}

model Vendedor {
  id     Int     @id @default(autoincrement())
  nome   String
  email  String  @unique
  vendas Venda[]
}

model Produto {
  id        Int            @id @default(autoincrement())
  nome      String
  descricao String
  preco     Float
  estoque   Int
  vendas    VendaProduto[]
}

model Compra {
  id         Int      @id @default(autoincrement())
  clienteId  Int
  cliente    Cliente  @relation(fields: [clienteId], references: [id])
  dataCompra DateTime
  valor      Float
  descricao  String?
}

model Venda {
  id            Int            @id @default(autoincrement())
  vendedorId    Int
  vendedor      Vendedor       @relation(fields: [vendedorId], references: [id])
  clienteId     Int
  cliente       Cliente        @relation(fields: [clienteId], references: [id])
  dataVenda     DateTime
  total         Float
  confirmada    Boolean
  vendaProdutos VendaProduto[]
}

model VendaProduto {
  id         Int     @id @default(autoincrement())
  vendaId    Int
  venda      Venda   @relation(fields: [vendaId], references: [id])
  produtoId  Int
  produto    Produto @relation(fields: [produtoId], references: [id])
  quantidade Int
  preco      Float
}
